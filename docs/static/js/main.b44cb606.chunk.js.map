{"version":3,"sources":["app/styles.module.css","components/Card/styles.module.css","components/UploadButton/styles.module.css","containers/Gallery/styles.module.css","components/Menu/styles.module.css","components/Loader/styles.module.css","components/UploadButton/index.js","services/localstorage.js","constants/routes.js","app/App.js","libs/check.js","slices/imageSlice.js","store/store.js","serviceWorker.js","components/Loader/index.js","assets/no-image.png","components/Card/index.js","components/Menu/index.js","containers/Gallery/index.js","index.js"],"names":["module","exports","UploadButton","props","onClick","className","styles","upbtn__wrap","upbtn","icon","faUpload","upbtn__icon","size","upbtn__text","uniqid","require","key","value","valueNew","JSON","stringify","localStorage","setItem","data","getItem","dataNew","parse","e","console","error","removeItem","url","arr","this","get","push","id","description","save","values","newValues","map","item","delete","num","newData","filter","length","deleteImages","GALLERY","App","useState","setUrl","fileInput","createRef","history","useHistory","showErrorMessage","message","setTimeout","toastr","goGallery","current","timeOut","newestOnTop","preventDuplicates","position","getState","state","transitionIn","transitionOut","closeOnToastrClick","app","app__form","app__fieldset","app__control_group","htmlFor","app__label","type","app__input","onChange","target","ref","accept","event","preventDefault","file","files","Promise","resolve","reject","toFixed","Error","then","fileReader","FileReader","readAsText","onload","result","err","toString","onerror","checkJson","LocalStorageDB","saveImages","images","catch","test","checkUrl","addImage","imagesSlice","createSlice","name","initialState","reducers","add","action","payload","remove","load","clear","actions","selectImages","configureStore","reducer","toastrReducer","imageSlice","Boolean","window","location","hostname","match","Loader","loader","faSpinner","loader__icon","Card","onRemove","card","masonryItem","src","masonryContent","alt","onError","noImage","card__popup","card__desc","card__btnremove","faTimes","card__icon","Menu","menu","menu__item","faHome","menu__icon","Gallery","imagesItems","useSelector","dispatch","useDispatch","useEffect","getImages","gallery__wrapper","gallery","masonry","removeImage","handleRemove","ReactDOM","render","StrictMode","store","exact","path","component","routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b44cb606.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"styles_app__eUpr-\",\"app__input\":\"styles_app__input__1chJH\",\"app__control_group\":\"styles_app__control_group__1jX3B\",\"app__label\":\"styles_app__label__3ZnuJ\",\"app__form\":\"styles_app__form__2RGCI\",\"app__fieldset\":\"styles_app__fieldset__rlyfz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__sGdin\",\"card__popup\":\"styles_card__popup__1y4v6\",\"card__desc\":\"styles_card__desc__j5WLq\",\"card__btnremove\":\"styles_card__btnremove__38Vb0\",\"masonryItem\":\"styles_masonryItem__1BRNA\",\"masonryContent\":\"styles_masonryContent__395PQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"upbtn\":\"styles_upbtn__eRuLL\",\"upbtn-hover\":\"styles_upbtn-hover__3HQji\",\"abbbtn__wrap\":\"styles_abbbtn__wrap__2DabM\",\"upbtn__text\":\"styles_upbtn__text__2-2wz\",\"upbtn__icon\":\"styles_upbtn__icon__BjHN6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"styles_gallery__H2-Pu\",\"gallery__wrapper\":\"styles_gallery__wrapper__3poRE\",\"masonry\":\"styles_masonry__3eY7H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"styles_menu__zhoqg\",\"menu__item\":\"styles_menu__item__3BTMl\",\"menu__icon\":\"styles_menu__icon__2HiG7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"styles_loader__zNilr\",\"spin\":\"styles_spin__6bji-\",\"loader__icon\":\"styles_loader__icon__84MlZ\"};","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\r\nimport styles from './styles.module.css';\r\n\r\nfunction UploadButton(props) {\r\n  const { onClick } = props;\r\n  return (\r\n    <div className={styles.upbtn__wrap}>\r\n      <button className={styles.upbtn} onClick={onClick}>\r\n        <FontAwesomeIcon icon={faUpload} className={styles.upbtn__icon} size=\"1x\" />\r\n        <div className={styles.upbtn__text}>Загрузить</div>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadButton;\r\n","const uniqid = require('uniqid');\r\n\r\nclass LocalStorageDB {\r\n  /**\r\n     * Добавляем данные в localStorage\r\n     *\r\n     *\r\n     * @param {string} key - ключ\r\n     * @param {any} value  - значение\r\n     */\r\n  save(key, value) {\r\n    const valueNew = JSON.stringify(value);\r\n    localStorage.setItem(key, valueNew);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n     * Извлекаем данные из localStorage\r\n     *\r\n     *\r\n     * @param {string} key object key id\r\n     *\r\n     * @returns {object|null}\r\n     */\r\n  get(key) {\r\n    const data = localStorage.getItem(key);\r\n    if (data === null) return false;\r\n    let dataNew = false;\r\n    try {\r\n      dataNew = JSON.parse(data);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    return dataNew;\r\n  }\r\n\r\n  // удаляем значение по ключу\r\n  delete(key) {\r\n    localStorage.removeItem(key);\r\n  }\r\n\r\n  addImage(url) {\r\n    const key = 'images';\r\n    const data = this.get(key);\r\n    const arr = (data) || [];\r\n    arr.push({\r\n      id: uniqid(),\r\n      url,\r\n      description: '',\r\n    });\r\n    this.save(key, arr);\r\n  }\r\n\r\n  getImages() {\r\n    return this.get('images');\r\n  }\r\n\r\n  saveImages(values) {\r\n    if (!values) return null;\r\n\r\n    let newValues = values;\r\n    if (!('id' in values[0])) {\r\n      newValues = values.map((item) => ({ id: uniqid(), ...item }));\r\n    }\r\n    return this.save('images', newValues);\r\n  }\r\n\r\n  deleteImages() {\r\n    return this.delete('images');\r\n  }\r\n\r\n  removeImage(num) {\r\n    const key = 'images';\r\n    const data = this.get(key);\r\n    if (data) {\r\n      const newData = data.filter(({ id }) => id !== num);\r\n      if (newData.length !== 0) {\r\n        this.save(key, newData);\r\n      } else {\r\n        this.deleteImages();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default new LocalStorageDB();\r\n","export const MAIN = '/';\r\nexport const GALLERY = '/gallery';\r\n","import React, { useState, createRef, useRef } from 'react';\r\nimport ReduxToastr, { toastr } from 'react-redux-toastr';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styles from './styles.module.css';\r\nimport UploadButton from '../components/UploadButton';\r\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css';\r\nimport LocalStorageDB from '../services/localstorage';\r\nimport { checkUrl, checkSize, checkJson } from '../libs/check';\r\nimport { GALLERY } from '../constants/routes';\r\n\r\nfunction App() {\r\n  const [url, setUrl] = useState('');\r\n  const fileInput = createRef();\r\n  const history = useHistory();\r\n\r\n  const showErrorMessage = (message) => {\r\n    setTimeout(() => {\r\n      toastr.error('Ошибка', message);\r\n    }, 0);\r\n  };\r\n\r\n  const clearFields = () => {\r\n    setUrl('');\r\n    fileInput.current = null;\r\n  };\r\n\r\n  const goGallery = () => {\r\n    clearFields();\r\n    history.push(GALLERY);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { length, ...files } = fileInput.current.files;\r\n\r\n    if (!url && length === 0) {\r\n      showErrorMessage('Данные для загрузки не найдены!');\r\n      return;\r\n    }\r\n\r\n    if (length !== 0) {\r\n      checkSize(files[0])\r\n        .then(() => checkJson(files[0]))\r\n        .then((data) => LocalStorageDB.saveImages(data.images))\r\n        .then(() => goGallery())\r\n        .catch((err) => showErrorMessage(err.toString()));\r\n    }\r\n\r\n    if (url) {\r\n      checkUrl(url)\r\n        .then(() => LocalStorageDB.addImage(url))\r\n        .then(() => goGallery())\r\n        .catch((err) => showErrorMessage(err.toString()));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ReduxToastr\r\n        timeOut={4000}\r\n        newestOnTop={false}\r\n        preventDuplicates\r\n        position=\"top-left\"\r\n        getState={(state) => state.toastr}\r\n        transitionIn=\"fadeIn\"\r\n        transitionOut=\"fadeOut\"\r\n        closeOnToastrClick\r\n      />\r\n      <div className={styles.app}>\r\n        <form className={styles.app__form}>\r\n          <fieldset className={styles.app__fieldset}>\r\n            <div className={styles.app__control_group}>\r\n              <label htmlFor=\"url-input\" className={styles.app__label}>\r\n                Url\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"url-input\"\r\n                  className={styles.app__input}\r\n                  value={url}\r\n                  onChange={(e) => setUrl(e.target.value)}\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className={styles.app__control_group}>\r\n              <label htmlFor=\"json-input\" className={styles.app__label}>\r\n                Json-файл\r\n                <input type=\"file\" id=\"json-input\" className={styles.app__input} ref={fileInput} accept=\".json\" />\r\n              </label>\r\n            </div>\r\n          </fieldset>\r\n          <UploadButton onClick={handleSubmit} />\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const MAX_SIZE = 1;\r\n\r\nexport const checkUrl = (url) => new Promise((resolve, reject) => {\r\n  const myRegex = /(http(s?):)([/|.|\\w|\\s|-])*\\.(?:jpg|gif|png)/g;\r\n  if (!myRegex.test(url)) {\r\n    reject(new Error('Ссылка не является картинкой!'));\r\n    return;\r\n  }\r\n  resolve(true);\r\n});\r\n\r\nexport const checkSize = (file) => new Promise((resolve, reject) => {\r\n  const size = (file.size / 1024 / 1024).toFixed(2);\r\n  if (size > MAX_SIZE) {\r\n    reject(new Error(`Размер файла не должен превышать ${MAX_SIZE}Mb`));\r\n    return;\r\n  }\r\n  resolve(true);\r\n});\r\n\r\nexport const checkJson = (file) => new Promise((resolve, reject) => {\r\n  const fileReader = new FileReader();\r\n  fileReader.readAsText(file, 'UTF-8');\r\n\r\n  fileReader.onload = (e) => {\r\n    try {\r\n      resolve(JSON.parse(e.target.result));\r\n    } catch (err) {\r\n      reject(new Error(err.toString()));\r\n    }\r\n  };\r\n\r\n  fileReader.onerror = () => {\r\n    reject(new Error(fileReader.error));\r\n  };\r\n});\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst uniqid = require('uniqid');\r\n\r\nexport const imagesSlice = createSlice({\r\n  name: 'images',\r\n  initialState: [],\r\n  reducers: {\r\n    add: (state, action) => [...state, action.payload],\r\n    remove: (state, action) => state.filter(({ id }) => id !== action.payload),\r\n    load: (state, action) => action.payload,\r\n    clear: () => [],\r\n  },\r\n});\r\n\r\nexport const {\r\n  add, remove, load, clear,\r\n} = imagesSlice.actions;\r\n\r\nexport const selectImages = (state) => state.images;\r\n\r\nexport const loadImages = (images) => (dispatch) => {\r\n  dispatch(load(images.map((item) => ({ id: uniqid(), ...item }))));\r\n};\r\n\r\nexport default imagesSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { reducer as toastrReducer } from 'react-redux-toastr';\r\nimport imageSlice from '../slices/imageSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    toastr: toastrReducer,\r\n    images: imageSlice,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the store load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web store is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different store. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\nimport styles from './styles.module.css';\r\n\r\nfunction Loader() {\r\n  return (\r\n    <div className={styles.loader}>\r\n      <FontAwesomeIcon icon={faSpinner} className={styles.loader__icon} size=\"2x\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","export default __webpack_public_path__ + \"static/media/no-image.ac740afd.png\";","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport styles from './styles.module.css';\r\nimport noImage from '../../assets/no-image.png';\r\n\r\nfunction Card(props) {\r\n  const { url, description, onRemove } = props;\r\n  if (!url) return null;\r\n\r\n  const handleImageError = (event) => {\r\n    event.target.src = noImage;\r\n  };\r\n\r\n  return (\r\n    <div className={`${styles.card} ${styles.masonryItem}`}>\r\n      <img src={url} className={styles.masonryContent} alt={description} onError={handleImageError} />\r\n      <div className={styles.card__popup}>\r\n        {description && (<div className={styles.card__desc}>{description}</div>)}\r\n        <button className={styles.card__btnremove} onClick={onRemove}>\r\n          <FontAwesomeIcon icon={faTimes} className={styles.card__icon} size=\"1x\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styles from './styles.module.css';\r\nimport { MAIN } from '../../constants/routes';\r\n\r\nfunction Menu() {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className={styles.menu}>\r\n      <button className={styles.menu__item} onClick={() => history.push(MAIN)}>\r\n        <FontAwesomeIcon icon={faHome} className={styles.menu__icon} size=\"1x\" />\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport ReduxToastr from 'react-redux-toastr';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { MAIN } from '../../constants/routes';\r\nimport LocalStorageDB from '../../services/localstorage';\r\nimport styles from './styles.module.css';\r\nimport {\r\n  load, selectImages, remove, clear,\r\n} from '../../slices/imageSlice';\r\nimport Loader from '../../components/Loader';\r\nimport Card from '../../components/Card';\r\nimport Menu from '../../components/Menu';\r\n\r\nfunction Gallery() {\r\n  const history = useHistory();\r\n  const imagesItems = useSelector(selectImages);\r\n  const dispatch = useDispatch();\r\n\r\n  const goMain = () => {\r\n    history.push(MAIN);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const images = LocalStorageDB.getImages();\r\n    if (!images) goMain();\r\n    dispatch(clear());\r\n    dispatch(load(images));\r\n  }, []);\r\n\r\n  const handleRemove = (event, id) => {\r\n    event.preventDefault();\r\n    dispatch(remove(id));\r\n    LocalStorageDB.removeImage(id);\r\n  };\r\n\r\n  const getCards = () => imagesItems.map((item) => (\r\n    <Card\r\n      {...item}\r\n      key={item.id}\r\n      onRemove={(event) => handleRemove(event, item.id)}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <ReduxToastr\r\n        timeOut={4000}\r\n        newestOnTop={false}\r\n        preventDuplicates\r\n        position=\"top-left\"\r\n        getState={(state) => state.toastr}\r\n        transitionIn=\"fadeIn\"\r\n        transitionOut=\"fadeOut\"\r\n        closeOnToastrClick\r\n      />\r\n      {imagesItems && imagesItems.length > 0 ? (\r\n        <>\r\n          <Menu />\r\n          <div className={styles.gallery__wrapper}>\r\n            <div className={`${styles.gallery} ${styles.masonry}`}>\r\n              {getCards()}\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : <Loader />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Gallery;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport App from './app/App';\r\nimport store from './store/store';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'normalize.css';\r\nimport * as routes from './constants/routes';\r\nimport Gallery from './containers/Gallery';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path={routes.MAIN} component={App} />\r\n          <Route exact path={routes.GALLERY} component={Gallery} />\r\n        </Switch>\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want your store to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}